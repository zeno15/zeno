--------------------------------------------------------------------------------------------------
TODO

Change from platform conditional includes (InputImpl) to typedefs (WindowImpl)

Remove glew/opengl from zeno lib, instead have swapBuffer() etc for display

Look at http://visualgdb.com/tutorials/linux/ for developing on windows for linux

AdjustWindowRect to have windows be the actual size. not including the frame
-	Also check/modify all the window get/set size functions

LShift doesnt work

Document all window related code

Implement window styles

change all Deconstructor to Destructor

use find_required in cmake for glew, opengl, freetype etc



look into if a abstract base class "Drawable" etc is a good thing

add sub directories for gui code, window code, graphics, networking, audio, system
add different libraries for each sub directory
add CMakeLists.txt for each sub directory

Change all #ifndef INCLUDED_FILENAME_EXTENSION's to something with the project name etc in it

Implement doxygen into header files

implement sleep function

add passing uniforms into vertex arrays	-	similar to sfml renderstates

opengl contexts when using different windows

have shaders work with multiple textures for vertex array?

2d/3d transformable

have RenderData take in a shader name, and then a drawable sub class with overloaded window render method of (const zeno::Drawable& _drawable, const zeno::RenderData& _renderData)

2d orthographic text

---------------------------------------------------------------------------------------------------
COMPLETE

textures 
vertexes
vertex arrays
sprites