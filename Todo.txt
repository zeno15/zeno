TODO
	-	http://sourceforge.net/projects/mingw-w64/files/latest/download
CMAKE
    -   Document CMakeLists.txt
    -	Make sure that in the cmake process you need to define the locations of the directories, rather than using the extlibs folder
    -   use find_required in cmake for glew, opengl, freetype etc
    -   Have glew static option etc
    -   Look into configuration files
        -	Version numbers
        -	Source file lists etc
    -   Add options to not build network module etc

Graphics
    -   Complete Graphics.hpp
        -   Move glew const values somewhere else

    *   Colour
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Font
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -	Redo to use signed distance field technqiue, maybe not worth it. Have as a separate choice, long load time
            -	http://contourtextures.wikidot.com/
            -	Valve paper, use 2 channel to preserve sharp corners
            -	http://webstaff.itn.liu.se/~stegu/aadist/edtaa_preprint.pdf
            -	Look at signed distance field for specific usage cases, default is freetype textured quads
	    -	Look into options for texture atlas size, start width > 512 etc, max size
    *   Glyph
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   Change to struct?
        -   Look into if cache aligning is performance necessary
    *   Image
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   ImageLoader
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Renderable
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -	For vertex array, sprite, text implement renderable
    *   RenderData
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
	    -	Make different constructors for different use cases
    *   Shader
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
	    -	 Put a comment in the destructor of zeno::Shader, seems to be called excessively
    *   ShaderManager
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   Have default shaders built into source code in build process, not in ShaderManager.cpp
    *   Sprite
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
	    -	Creating with default constructor crashes (in separate project, maybe build process is weird, setting texture rectangle issue)
    *   Text
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -	Fix overlapping font quads not working, kerning etc
        -	Look into issue with rotated text artifacts
        -	Change way they are rendered so it defaults to the default shader, but if other is set will use that
            -	Have the uniform passing only be used if it is the default shader
    *   Texture
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -	Look into modifying texture, expanding etc
        -	Have persistent options for texture, stay when reloaded
        -	Implement different channel textures, for font (1 channel) etc
        -   find better way to update textures than completely recreating them (i.e. as in font) Pixel Buffer Objects
    *   Vertex
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   VertexArray
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   Have shader for when a texture is/isn't used with vertex array

GUI
    -   Complete GUI.hpp
    -   Better naming (GUIBase/GUIDesktop etc)
    -	http://highschool.cs.vt.edu/Svc2012/S2012/gui-events-slides.pdf
    -	https://courses.cs.washington.edu/courses/cse331/13sp/lectures/lect23-graphics.pdf
    -   Have elements look different when disabled/active etc

    *   Button
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -	Add methods to get/set colours, size, position, outline thickness
        -	Do we want the label colour to change for the text when button state changes?
    *   GuiBase
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -	Need virtual method to return what depth the parts of the element cover
        -	have visible/enabled etc
        -	may need to have disabled colours for elements, or just tone the colours down?
        -	need to have function to return start and end heights of created verticies
        -	Desired/requested sizes, and the actual size a pane can give an element
        -	Pass render data down the children hierachy
        -	Implement has focus etc
    *   GuiDesktop
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   Have default shaders built into source code in build process, not in GuiDesktop.cpp
        -   GuiDesktop better event management (not using created events instantly)
        -	Have it as a member of the window? user has to set it so its not wasteful etc
        -	Set a single font for entire gui desktop or per pane?
        -	Dont create a new component then add, rather use GUIDesktop like a factory
        -	Maybe have quad tree for doing GUIPane bounding checks?
        -	Add to window.pollEvent() to pass to the desktop if it is present
    *   GUIEvent
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   Remove, use normal window events
        -   Have panes register what events they want and only pass if necessary
    *   GuiPane
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   Have pane check bounds of mouse clicks etc so as to not waste all components checking
        -	Have fast opt out of event handling, have objects register with panes what events they want
        -	Have tab and shift-tab change which element has focus
        -	Need a way for one element to notify others that it has focus so others can relinquish it
        -	Each pane should gather up all verticies for all components it contains, so drawing a pane is 1 draw call for verticies and 1 for text?
    *   Label
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
	    -	Crashes if you try to draw before setting the label string
    *   ProgressBar
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -	Have option for indeterminate length, ie |             []				| with [] moving
        -	Change position to use uniform passed to shader
        -	Change size to use uniform passed to shader
        -	Generalise position, size getters/setters
        -	Rewrite constructor so no data is buffered in it, have seperate functions use glBufferSubData
        -	When complete pulse the bar to indicate completeness
        -   Remove progressUpdate event, change to getting the element and calling a method
    *   Slider
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
	    -	Need to clean up vertex creation
    *   TextBox
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
	    -	Add to GUIEvent normal keypress events, ie left right etc

Network
    -   Complete Network.hpp
    -   IP address struct/class? Instead of strings
    -   Split sockets into platform specifics

    *   HTTPProtocol
        -   TODO Next release
            -   Stop having connection close field as default
            -   Have callback for different chunks, progress etc
            -   Deal with trailers
            -   POST requests
    *   Socket
        -   TODO Next release: Non-blocking sockets
    *   TCPListener
        -   Return more useful SocketStatus values
    *   TCPSocket
        -   Return more useful SocketStatus values
    *   UDPSocket
        -   Return more useful SocketStatus values
    *   FTP
        -   TODO Next release
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   SSLTCPSocket

System
    -   Complete System.hpp
    -   Implement sleep function

    *   Clock
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Event
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   InputImplementationUnix
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   InputImplementationWindows
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Keyboard
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   LShift doesn't work
    *   Mat4x4
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Mouse
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Rect
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Time
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Transformable2D
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -	Apply to text
        -	Apply to sprite
        -   Have Transformable3D as a member, and have same methods except pass 0.0f in for all z components?
    *   Transformable3D
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
	    -	Apply to GuiBase
    *   Vector2
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Vector3
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Vector4
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   VectorMath
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc

Window
    -   Complete Window.hpp

    *   ContextImplementation
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   ContextUnix
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   ContextWin32
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   VideoMode
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Window
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   Set v-sync
            -   Windows
            -   Linux
        -   Set desired FPS
            -   Windows
            -   Linux
        -   OpenGL contexts when using different windows
        -   Look into specifying more options, stencil depth etc
        -   Also check/modify all the window get/set size functions
            -   Check window border size etc
        -   Set window icon
    *   WindowHandle
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   WindowImplementation
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   WindowImplementationUnix
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   WindowImplementationWin32
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   WindowStyle
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
        -   Implement window styles
            -   Windows
            -   Linux

Audio
    -   TODO Next release

Utility
    *   StringMethods
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   XML
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc

Other
    -   Buy a Mac!
    -   Custom error stream
    -   Profiler
    -   for << operator overloading, change to stream insertion operator
    -   Look at licenses for OpenSSL, GLEW, Freetype, ws2_32, OpenGL etc and modify lib license if necessary
        -   stb (png opening etc)
    -   Look into whether functions should look like:
            static const void
            methodName(T _name);
    -   Remove superfluous #includes
    -   consistancy when using sizeof(float), change all to sizeof(GLfloat)
    -   Change the _WIN32 and __linux__ to library specfic ones defined in CMakeLists.txt
    -   Investigate change from platform conditional includes (InputImpl) to typedefs (WindowImpl)?
    -   Re-implement unit tests
    -   Find other common linux versions, create virtual machine so can build and run Unit tests and examples
    -   Change all Deconstructor to Destructor
	-	Test that all 4 library versions (static/shared, debug/release) work on all platforms
	-   Particle System
        -	Using Geometry shader and point sprites (GL_POINT_SPRITE, )
    -   Random Number
	    -	Put wrapper around c++11 functions for simple use cases




---------------------------------------------------------------------------------------------------
COMPLETE

textures 
vertexes
vertex arrays
sprites

add sub directories for gui code, window code, graphics, networking, audio, system
add different libraries for each sub directory
Change all #ifndef INCLUDED_FILENAME_EXTENSION's to something with the project name etc in it

AdjustWindowRect to have windows be the actual size. not including the frame

Set v-sync etc or desired fps
    -   Win32

Fonts
	-	move font stuff to graphics
	-	2d orthographic text
	-	basic implementation complete
	-	Add kerning
	-	Fix text layering, alpha blending not workingas expected.
	
Button
	-	Need to add label to the button etc
		-	Have a method for adding a label which sets the buttons desired size to the bounding area of the text
	
Progress Bar
	-	Have text numbers denoting percentage? - Simply draw it above it, not needed.
	-	Can change colour of outline, incomplete and complete sections
	
Slider
	-	Basic slider implemented, can be discrete or continuous
	
GUIDesktop
	-	get the component back by id
	-	Implement template method to get children from panes without dynamic_cast-ing all the time
	
Image
	-	Implement copy method
	-	Implement expand vertically method

Texture
	-	Implement setting min/mag filter options

Graphics

    *   Colour
    *   Font
    *   Glyph
    *   Image
    *   ImageLoader
    *   Renderable
    *   RenderData
    *   Shader
    *   ShaderManager
    *   Sprite
    *   Text
    *   Texture
    *   Vertex
    *   VertexArray

GUI

    *   Button
    *   GuiBase
    *   GuiDesktop
    *   GuiEvent
    *   GuiPane
    *   Label
    *   ProgressBar
    *   Slider
    *   TextBox

Network
    -   Remove WSASession class from Socket.hpp, or put it somewhere platform specific

    *   HTTPProtocol
        -   Remove HTTPSRequest, just have httprequest internally use ssl sockets if needed? detect from response or url?
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   Socket
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   SSLTCPSocket
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   TCPListener
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   TCPSocket
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc
    *   UDPSocket
        -   Fill in the "How this works" section at the bottom of each class
        -   Comment doxygen for each function and class etc

System

    *   Clock
    *   Event
    *   InputImplementationUnix
    *   InputImplementationWindows
    *   Keyboard
    *   Mat4x4
    *   Mouse
    *   Rect
    *   Time
    *   Transformable2D
    *   Transformable3D
    *   Vector2
    *   Vector3
    *   Vector4
    *   VectorMath

Window
    -   Complete Window.hpp

    *   ContextImplementation
    *   ContextUnix
    *   ContextWin32
    *   VideoMode
    *   Window
    *   WindowHandle
    *   WindowImplementation
    *   WindowImplementationUnix
    *   WindowImplementationWin32
    *   WindowStyle