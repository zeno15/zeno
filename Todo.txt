--------------------------------------------------------------------------------------------------
TODO

GUI
	-	http://highschool.cs.vt.edu/Svc2012/S2012/gui-events-slides.pdf
	-	https://courses.cs.washington.edu/courses/cse331/13sp/lectures/lect23-graphics.pdf

Change from platform conditional includes (InputImpl) to typedefs (WindowImpl)?

Remove glew/opengl from zeno lib, instead have swapBuffer() etc for display

Look at http://visualgdb.com/tutorials/linux/ for developing on windows for linux

AdjustWindowRect to have windows be the actual size. not including the frame
-	Also check/modify all the window get/set size functions

Set v-sync etc or desired fps

LShift doesnt work

Implement window styles

change all Deconstructor to Destructor

use find_required in cmake for glew, opengl, freetype etc

have shared libraries be created as well
	-	Test that all 4 library versions work on both platforms

look into if a abstract base class "Drawable" etc is a good thing
	-	For vertex array, sprite implement drawable


Implement doxygen into header files

implement sleep function

add passing uniforms into vertex arrays	-	similar to sfml renderstates

opengl contexts when using different windows

have shaders work with multiple textures for vertex array?
have shader for when a texture is/isnt used with vertex array

2d transformable
3d transformable

have RenderData take in a shader name, and then a drawable sub class with overloaded window render method of (const zeno::Drawable& _drawable, zeno::RenderData _renderData)

Fonts
	-	handle different font sizes within the same font object
	-	need to make sure there is a single non available glyph that is used for all characters that need it
	-	Font::createCharVertexes uses the texture size when it may be modified
	-	currently passing colour data into the gpu, then passing colour uniform, wasteful.

find better way to update textures than completely recreating them (i.e. as in font) Pixel Buffer Objects

add in generic headers for each different sub module

inherit Transformable2D for gui objects
GuiDesktop better event management (not using created events instantly)
implement names/id's for all guibase objects so events can go to specific objects

ProgressBar
	-	Have option for indeterminate length, ie |             []				| with [] moving
	-	Change position to use uniform passed to shader
	-	Change size to use uniform passed to shader
	-	Generalise position, size getters/setters
	
---------------------------------------------------------------------------------------------------
COMPLETE

textures 
vertexes
vertex arrays
sprites

add sub directories for gui code, window code, graphics, networking, audio, system
add different libraries for each sub directory
Change all #ifndef INCLUDED_FILENAME_EXTENSION's to something with the project name etc in it

Fonts
	-	move font stuff to graphics
	-	2d orthographic text
	-	have unique shader for text, needs to take as a uniform the texture size, or figure out a way to use pixel coords instead of 0.0f->1.0
	
Progress Bar
	-	Have text numbers denoting percentage? - Simply draw it above it, not needed.
	-	Can change colour of outline, incomplete and complete sections