#ifndef INCLUDED_ZENO_GUI_GUI_DESKTOP_HPP
#define INCLUDED_ZENO_GUI_GUI_DESKTOP_HPP

#include <zeno/GUI/GUIEvent.hpp>
#include <zeno/System/Vector2.hpp>

#include <vector>

namespace zeno {

class GuiBase;
class Time;
class Event;

////////////////////////////////////////////////////////////
//
//	
//
////////////////////////////////////////////////////////////
class GuiDesktop
{
public:
	////////////////////////////////////////////////////////////
	//
	//	
	//
	////////////////////////////////////////////////////////////
	GuiDesktop(void);
	////////////////////////////////////////////////////////////
	//
	//	
	//
	////////////////////////////////////////////////////////////
	~GuiDesktop(void);

	////////////////////////////////////////////////////////////
	//
	//	
	//
	////////////////////////////////////////////////////////////
	void processEvent(const Event& _event) const;
	////////////////////////////////////////////////////////////
	//
	//	
	//
	////////////////////////////////////////////////////////////
	void render(void);

	////////////////////////////////////////////////////////////
	//
	//	
	//
	////////////////////////////////////////////////////////////
	void addChild(GuiBase *_child);

	////////////////////////////////////////////////////////////
	//
	//
	//
	////////////////////////////////////////////////////////////
	void setResolution(unsigned int _x, unsigned int _y);

	////////////////////////////////////////////////////////////
	//
	//
	//
	////////////////////////////////////////////////////////////
	void setResolution(const Vector2u& _resolution);
	
	////////////////////////////////////////////////////////////
	//
	//
	//
	////////////////////////////////////////////////////////////
	void throwEvent(const GUIEvent& _guiEvent);

private:
	////////////////////////////////////////////////////////////
	//
	//	Translates a window event to a guiEvent, returns whether
	//	
	//
	////////////////////////////////////////////////////////////
	bool translateEvent(const Event& _event, GUIEvent& _guiEvent) const;

private:
	////////////////////////////////////////////////////////////
	//
	//	
	//
	////////////////////////////////////////////////////////////
	std::vector<GuiBase *>		m_Children;

	////////////////////////////////////////////////////////////
	//
	//	
	//
	////////////////////////////////////////////////////////////
	Vector2u					m_Resolution;
};

} //~ namespace zeno

#endif //~ INCLUDED_ZENO_GUI_GUI_DESKTOP_HPP