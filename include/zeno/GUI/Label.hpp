#ifndef INCLUDED_ZENO_GUI_LABEL_HPP
#define INCLUDED_ZENO_GUI_LABEL_HPP

#include <zeno/GUI/GuiBase.hpp>

#include <zeno/Graphics/Text.hpp>

namespace zeno {

class Label : public GuiBase
{
public:


	////////////////////////////////////////////////////////////
	//
	//	Virtual function which returns whether or not the 
	//	element can handle the given event, and if it can handle
	//	it, it does so
	//
	////////////////////////////////////////////////////////////
	virtual bool processEvent(const GUIEvent& _event);

	////////////////////////////////////////////////////////////
	//
	//	Renders the element
	//
	////////////////////////////////////////////////////////////
	virtual void render(Mat4x4 _transform) const;

	////////////////////////////////////////////////////////////
	//
	//	Returns the Rect object that contains all the points of
	//	the GUI element.
	//
	////////////////////////////////////////////////////////////
	virtual FloatRect getBounds(void);
	
	////////////////////////////////////////////////////////////
	//
	//	Sets the text to be used for the label
	//
	////////////////////////////////////////////////////////////
	void setLabel(const std::string& _label);
	
	////////////////////////////////////////////////////////////
	//
	//	Changes the colour of the label text
	//
	////////////////////////////////////////////////////////////
	void setLabelColour(const Colour& _colour);

    void setFont(Font *_font);

private:

    friend class Desktop;

    ////////////////////////////////////////////////////////////
    //
    //	Default constructor
    //
    ////////////////////////////////////////////////////////////
    Label(const std::string& _id, GuiBase *_parent);
    ////////////////////////////////////////////////////////////
    //
    //	Deconstructor
    //
    ////////////////////////////////////////////////////////////
    ~Label(void);

    static Label *createElement(const std::string& _id, GuiBase *_parent);

private:
	////////////////////////////////////////////////////////////
	//
	//	Text object that the label consists of
	//
	////////////////////////////////////////////////////////////
	Text					m_LabelText;

	////////////////////////////////////////////////////////////
	//
	//	Pointer to the font used for the label
	//
	////////////////////////////////////////////////////////////
	Font *					m_LabelFont;
};

} //~ namespace zeno

#endif //~ INCLUDED_ZENO_GUI_LABEL_HPP