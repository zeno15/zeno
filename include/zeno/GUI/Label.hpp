#ifndef INCLUDED_ZENO_GUI_LABEL_HPP
#define INCLUDED_ZENO_GUI_LABEL_HPP

#include <zeno/GUI/GuiBase.hpp>

namespace zeno {

class Label : public GuiBase
{
public:
	////////////////////////////////////////////////////////////
	//
	//	Default constructor
	//
	////////////////////////////////////////////////////////////
	Label(const std::string& _id);
	////////////////////////////////////////////////////////////
	//
	//	Deconstructor
	//
	////////////////////////////////////////////////////////////
	~Label(void);


	////////////////////////////////////////////////////////////
	//
	//	Virtual function which returns whether or not the 
	//	element can handle the given event, and if it can handle
	//	it, it does so
	//
	////////////////////////////////////////////////////////////
	virtual bool processEvent(const GUIEvent& _event);

	////////////////////////////////////////////////////////////
	//
	//	Renders the element
	//
	////////////////////////////////////////////////////////////
	virtual void render(void) const;

private:

};

} //~ namespace zeno

#endif //~ INCLUDED_ZENO_GUI_LABEL_HPP