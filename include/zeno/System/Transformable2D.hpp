#ifndef INCLUDED_TRANSFORMABLE_2D_HPP
#define INCLUDED_TRANSFORMABLE_2D_HPP

#include <zeno/System/Mat4x4.hpp>
#include <zeno/System/Vector2.hpp>

namespace zeno {

////////////////////////////////////////////////////////////
//
//	Base class that represents a 2D transformable object
//
////////////////////////////////////////////////////////////
class Transformable2D
{
public:
	////////////////////////////////////////////////////////////
	//
	//	Sets the position of the object
	//
	////////////////////////////////////////////////////////////
	void setPosition(const Vector2f& _position);

	////////////////////////////////////////////////////////////
	//
	//	Get const reference to the position of the object
	//
	////////////////////////////////////////////////////////////
	const Vector2f& getPosition(void) const;

	////////////////////////////////////////////////////////////
	//
	//	Gets the resultant transform for the object
	//
	////////////////////////////////////////////////////////////
	Mat4x4 getTransform(void) const;

protected:
	////////////////////////////////////////////////////////////
	//
	//	Position of the object
	//
	////////////////////////////////////////////////////////////
	Vector2f					m_Position;

};

} //~ namespace zeno

#endif //~ INCLUDED_TRANSFORMABLE_2D_HPP