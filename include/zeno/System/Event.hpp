#ifndef INCLUDED_ZENO_SYSTEM_EVENT_HPP
#define INCLUDED_ZENO_SYSTEM_EVENT_HPP

#include <zeno/System/Keyboard.hpp>
#include <zeno/System/Mouse.hpp>

namespace zeno {

////////////////////////////////////////////////////////////
//
//	Platform independant event class
//
////////////////////////////////////////////////////////////
class Event
{
public:
	////////////////////////////////////////////////////////////
	//
	//	Enumeration of event types that are handled
	//
	////////////////////////////////////////////////////////////
	enum EventType {
		WindowClosed,
		GainedFocus,
		LostFocus,
		WindowSizeChanged,
		KeyDown,
		KeyUp,
		TextEntered,
		MouseWheelChanged,
		MouseButtonPressed,
		MouseButtonReleased,
		MouseMoved
	};

	////////////////////////////////////////////////////////////
	//
	//	Enumeration of different types of resize events 
	//
	////////////////////////////////////////////////////////////
	enum ResizedType {
		Maximized,
		Minimized,
		Restored
	};

	////////////////////////////////////////////////////////////
	//
	//	Struct representing data of a key event
	//
	////////////////////////////////////////////////////////////
	struct KeyEvent {
		Keyboard::Key	key;
		bool			alt;
		bool			control;
		bool			shift;
		bool			system;
	};

	////////////////////////////////////////////////////////////
	//
	//	Struct representing data of a size event
	//
	////////////////////////////////////////////////////////////
	struct SizeEvent {
		unsigned int	width;
		unsigned int	height;
		ResizedType		type;
	};

	////////////////////////////////////////////////////////////
	//
	//	Struct representing data of a mouse wheel event
	//
	////////////////////////////////////////////////////////////
	struct MouseWheelEvent {
		int				delta;
		int				x;
		int				y;
	};

	////////////////////////////////////////////////////////////
	//
	//	Struct representing data of a mouse button event
	//
	////////////////////////////////////////////////////////////
	struct MouseButtonEvent {
		Mouse::Button	button;
		int				x;
		int				y;
	};

	////////////////////////////////////////////////////////////
	//
	//	Struct representing data of a position event
	//
	////////////////////////////////////////////////////////////
	struct PositionEvent {
		int				x;
		int				y;
	};

public:
	////////////////////////////////////////////////////////////
	//
	//	Type of event that is triggered
	//
	////////////////////////////////////////////////////////////
	EventType		type;

	////////////////////////////////////////////////////////////
	//
	//	Union containing all types of events possible
	//
	////////////////////////////////////////////////////////////
	union {
		KeyEvent			key;
		SizeEvent			size;
		MouseWheelEvent		wheel;
		MouseButtonEvent	mouseButton;
		PositionEvent		position;
	};
};

} //~ namespace zeno

#endif //~ INCLUDED_ZENO_SYSTEM_EVENT_HPP