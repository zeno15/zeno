#ifndef INCLUDED_SHADER_MANAGER_HPP
#define INCLUDED_SHADER_MANAGER_HPP

#include <zeno/Graphics/Shader.hpp>

#include <vector>
#include <string>

namespace zeno {

////////////////////////////////////////////////////////////
//
//	Class to manage accessing shaders in a static way
//
////////////////////////////////////////////////////////////
class ShaderManager
{
public:
	////////////////////////////////////////////////////////////
	//
	//	Gets the static instance of the shader manager
	//
	////////////////////////////////////////////////////////////
	static ShaderManager& getInstance(void);

	////////////////////////////////////////////////////////////
	//
	//	Adds a shader to the manager by their file paths
	//
	////////////////////////////////////////////////////////////
	bool addShader(const std::string& _name, const std::string& _vertexPath, const std::string& _fragmentPath);
	////////////////////////////////////////////////////////////
	//
	//	Adds a shader to the manager by their sources
	//
	////////////////////////////////////////////////////////////
	bool addShaderFromSource(const std::string& _name, const std::string& _vertexSource, const std::string& _fragmentSource);
	////////////////////////////////////////////////////////////
	//
	//	Returns the requested shader
	//
	////////////////////////////////////////////////////////////
	Shader& getShader(const std::string& _name);
private:
	////////////////////////////////////////////////////////////
	//
	//	Private constructor so that the class can be a singleton
	//
	////////////////////////////////////////////////////////////
	ShaderManager(void);
	////////////////////////////////////////////////////////////
	//
	//	Private deconstructor so that the class can be a singleton
	//
	////////////////////////////////////////////////////////////
	~ShaderManager(void);
	
private:
	////////////////////////////////////////////////////////////
	//
	//	List of shaders and the names they are accessable by
	//
	////////////////////////////////////////////////////////////
	std::vector<std::pair<std::string, Shader>>		m_Shaders;
};

} //~ namespace zeno

#endif //~ INCLUDED_SHADER_MANAGER_HPP
