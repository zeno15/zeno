#ifndef INCLUDED_IMAGE_HPP
#define INCLUDED_IMAGE_HPP

#include <string>
#include <cstdint>
#include <vector>

#include <zeno/System/Vector2.hpp>
#include <zeno/Graphics/Colour.hpp>

namespace zeno {

////////////////////////////////////////////////////////////
//
//	Class to represent image in memory
//
////////////////////////////////////////////////////////////
class Image
{
public:
	////////////////////////////////////////////////////////////
	//
	//	Creates image of given size and sets all pixels to given colour
	//
	////////////////////////////////////////////////////////////
	void create(unsigned int _width, unsigned int _height, const Colour& _colour = Colour::Black);
	
	////////////////////////////////////////////////////////////
	//
	//	Loads image from given filepath
	//
	////////////////////////////////////////////////////////////
	bool loadFromFile(const std::string& _filename);
	////////////////////////////////////////////////////////////
	//
	//	Saves image to disk at given filepath
	//
	////////////////////////////////////////////////////////////
	bool saveToFile(const std::string& _filename);
	
	////////////////////////////////////////////////////////////
	//
	//	Returns the size of the image
	//
	////////////////////////////////////////////////////////////
	Vector2<unsigned int> getSize(void) const;
	
	////////////////////////////////////////////////////////////
	//
	//	Gets the colour at the given pixels
	//
	////////////////////////////////////////////////////////////
	Colour getPixel(unsigned int _x, unsigned int _y) const;
	////////////////////////////////////////////////////////////
	//
	//	Sets the colour at the given pixel
	//
	////////////////////////////////////////////////////////////
	void setPixel(unsigned int _x, unsigned int _y, const Colour& _colour);
	
	////////////////////////////////////////////////////////////
	//
	//	Gets a pointer to the raw pixel values
	//
	////////////////////////////////////////////////////////////
	const uint8_t *getPixelPointer(void) const;
private:
	////////////////////////////////////////////////////////////
	//
	//	Internal representation of the size of the image
	//
	////////////////////////////////////////////////////////////
	Vector2<unsigned int>			m_Size;
	////////////////////////////////////////////////////////////
	//
	//	Vector of the pixel data
	//
	////////////////////////////////////////////////////////////
	std::vector<uint8_t>			m_Pixels;
	
};

} //~ namespace zeno

#endif //~ INCLUDED_IMAGE_HPP
