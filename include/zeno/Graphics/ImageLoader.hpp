#ifndef INCLUDED_ZENO_GRAPHICS_IMAGE_LOADER_HPP
#define INCLUDED_ZENO_GRAPHICS_IMAGE_LOADER_HPP

#include <string>
#include <vector>
#include <cstdint>

#include <zeno/System/Vector2.hpp>

namespace zeno {
	
////////////////////////////////////////////////////////////
//
//	Class to handle saving & loading images
//
////////////////////////////////////////////////////////////
class ImageLoader
{
public:
	////////////////////////////////////////////////////////////
	//
	//	Method to return static instance of the loader
	//
	////////////////////////////////////////////////////////////
	static ImageLoader& getInstance(void);
	
	////////////////////////////////////////////////////////////
	//
	//	Method to load image from file, type depends on extensions
	//
	////////////////////////////////////////////////////////////
	bool loadImageFromFile(const std::string& _filename, std::vector<uint8_t>& _pixels, Vector2<unsigned int>& _size);
	
	////////////////////////////////////////////////////////////
	//
	//	Method to save image to file, file type depends on extension
	//
	////////////////////////////////////////////////////////////
	bool saveImageToFile(const std::string& _filename, const std::vector<uint8_t>& _pixels, const Vector2<unsigned int>& _size);
	
private:
	////////////////////////////////////////////////////////////
	//
	//	Private constructor
	//
	////////////////////////////////////////////////////////////
	ImageLoader(void);
	////////////////////////////////////////////////////////////
	//
	//	Private deconstructor
	//
	////////////////////////////////////////////////////////////
	~ImageLoader(void);
};

} //~ namespace zeno

#endif //~ INCLUDED_ZENO_GRAPHICS_IMAGE_LOADER_HPP
