#ifndef INCLUDED_ZENO_GRAPHICS_FONT_ATLAS_IMAGE_HPP
#define INCLUDED_ZENO_GRAPHICS_FONT_ATLAS_IMAGE_HPP

#include <zeno/Graphics/Image.hpp>

#include <vector>

namespace zeno {

struct Glyph;

////////////////////////////////////////////////////////////
//
//	Class to contain, and add to a specific font's (and size)
//	atlas
//
////////////////////////////////////////////////////////////
class FontAtlasImage
{
public:
	////////////////////////////////////////////////////////////
	//
	//	Constructor, creates the font atlas at a default size of
	//	512x512 pixels
	//
	////////////////////////////////////////////////////////////
	FontAtlasImage(void);

	////////////////////////////////////////////////////////////
	//
	//	Returns reference to atlas image
	//
	////////////////////////////////////////////////////////////
	Image& getAtlas(void);

	////////////////////////////////////////////////////////////
	//
	//	Add given image glyph to altas, and modify related
	//	glyph structure
	//
	////////////////////////////////////////////////////////////
	void addGlyph(const Image& _image, Glyph& _glyph);
private:
	////////////////////////////////////////////////////////////
	//
	//	Font atlas
	//
	////////////////////////////////////////////////////////////
	Image	m_Image;

	unsigned int m_CurrentHeightFromBase;
	unsigned int m_CurrentHorizontal;
	unsigned int m_NextHeightFromBase;
};

} //~ namespace zeno

#endif //~ INCLUDED_ZENO_GRAPHICS_FONT_ATLAS_IMAGE_HPP