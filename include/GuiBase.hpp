#ifndef INCLUDED_GUI_BASE_HPP
#define INCLUDED_GUI_BASE_HPP

namespace zeno {

class Event;

////////////////////////////////////////////////////////////
//
//	Base for all GUI elements
//
////////////////////////////////////////////////////////////
class GuiBase
{
public:
	////////////////////////////////////////////////////////////
	//
	//	Default constructor
	//
	////////////////////////////////////////////////////////////
	GuiBase(void);
	////////////////////////////////////////////////////////////
	//
	//	Deconstructor
	//
	////////////////////////////////////////////////////////////
	virtual ~GuiBase(void);

	////////////////////////////////////////////////////////////
	//
	//	Virtual function which returns whether or not the 
	//	element can handle the given event
	//
	////////////////////////////////////////////////////////////
	virtual bool processEvent(const Event& _event) = 0;
	////////////////////////////////////////////////////////////
	//
	//	Renders the element
	//
	////////////////////////////////////////////////////////////
	void render(void);

	////////////////////////////////////////////////////////////
	//
	//	Sets the active state
	//
	////////////////////////////////////////////////////////////
	void setActive(bool _active);

	////////////////////////////////////////////////////////////
	//
	//	Returns the elements active state
	//
	////////////////////////////////////////////////////////////
	bool getActive(void);

protected:
	////////////////////////////////////////////////////////////
	//
	//	The elements state (enabled or not)
	//
	////////////////////////////////////////////////////////////
	bool				m_Active;
};

} //~ namespace zeno

#endif //~ INCLUDED_GUI_BASE_HPP